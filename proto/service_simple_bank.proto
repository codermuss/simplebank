syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "rpc_create_user.proto";
import "rpc_update_user.proto";
import "rpc_verify_email.proto";
import "rpc_login_user.proto";
import "rpc_refresh_token.proto";
import "rpc_list_accounts.proto";
import "rpc_base_response.proto";
import "rpc_add_account.proto";
import "rpc_update_account.proto";
import "rpc_transfer.proto";
import "protoc-gen-openapiv2/options/annotations.proto";


option go_package = "github.com/mustafayilmazdev/simplebank";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      title: "Simple Bank API";
      version: "1.7";
      contact: {
        name: "muss";
        url: "https://github.com/codermuss";
        email: "codermuss@gmail.com";
      };
    };};
  

service SimpleBank {
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
            post: "/v1/create_user"
            body: "*"
            };

            option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
                description: "Use this API to create a new user";
                summary: "Create new user";
            };
    }
    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {
        option (google.api.http) = {
            patch: "/v1/update_user"
            body: "*"
            };

            option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
                description: "Use this API to update a user";
                summary: "Update user";
            };
    }
    rpc LoginUser (LoginUserRequest) returns (LoginUserResponse) {
        option (google.api.http) = {
            post: "/v1/login_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to login user";
            summary: "Login user";
        };
    }
    rpc VerifyEmail (VerifyEmailRequest) returns (VerifyEmailResponse) {
        option (google.api.http) = {
            get: "/v1/verify_email"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to verify user's email address";
            summary: "Verify email";
        };
    }
    rpc RefreshToken (RefreshTokenRequest) returns (RefreshTokenResponse) {
        option (google.api.http) = {
            post: "/v1/refresh_token"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to refresh user's access token";
            summary: "Refresh token";
        };
    }
    rpc ListAccounts (ListAccountsRequest) returns (BaseResponse) {
        option (google.api.http) = {
            get: "/v1/list_accounts"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to fetch user's accounts";
            summary: "List accounts";
        };
    }
    rpc AddAccount (AddAccountRequest) returns (BaseResponse) {
        option (google.api.http) = {
            post: "/v1/add_account"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to add account to the user";
            summary: "Add account";
        };
    }
    rpc UpdateAccount (UpdateAccountRequest) returns (BaseResponse) {
        option (google.api.http) = {
            put: "/v1/update_account"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update user's account";
            summary: "Update account";
        };
    }
    rpc Transfer (TransferRequest) returns (BaseResponse) {
        option (google.api.http) = {
            post: "/v1/transfer"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to transfer money between accounts";
            summary: "Transfer";
        };
    }
}
package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgxpool"
)

// * Note [codermuss]: Make interface for mocking
type Store interface {
	// * Note [codermuss]: Querier generated by sqlc. It has an interface includes all db functions.
	// * Note [codermuss]: If sqlc would not generate this. We would have to write all db functions by manually.
	Querier
	// * Note [codermuss]:
	TransferTx(ctx context.Context, arg TransferTxParams) (TransferTxResult, error)
	CreateUserTx(ctx context.Context, arg CreateUserTxParams) (CreateUserTxResult, error)
	VerifyEmailTx(ctx context.Context, arg VerifyEmailTxParams) (VerifyEmailTxResult, error)
}

type SQLStore struct {
	connPool *pgxpool.Pool
	*Queries
}

// * Note [codermuss]: SQL Store implements the Store interface so this func can return SQLStore
func NewStore(connPool *pgxpool.Pool) Store {
	return &SQLStore{
		connPool: connPool,
		Queries:  New(connPool),
	}
}
